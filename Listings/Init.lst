C51 COMPILER V9.59.0.0   INIT                                                              04/13/2020 15:48:26 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE INIT
OBJECT MODULE PLACED IN .\Objects\Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\Basic\init\Init.c OMF2 OPTIMIZE(9,SPEED) BROWSE MODP2 INCDIR(.\Code
                    -\Basic\def;.\Code\Basic\delay;.\Code\Basic\init;.\Code\Basic\uart;.\Code\Sensor\DS18B20;.\Code\Sensor\LCD1602;.\Code\Ali
                    -babaCloud) DEBUG PRINT(.\Listings\Init.lst) OBJECT(.\Objects\Init.obj)

line level    source

   1          #include "Init.h"
   2          //------------------------------------------------------------------------------------------------//
   3          static void Init_rst(void);
   4          static void Init_io(void);
   5          static void Init_timer0(void);
   6          static void Init_uart1(void);
   7          static void Init_uart4(void);
   8          static void Init_wkt(float,bool);
   9          static void Init_interrupt(void);
  10          //------------------------------------------------------------------------------------------------//
  11          
  12          void Init(void)
  13          {
  14   1          //内部
  15   1          Init_rst();       //低压复位&看门狗初始化
  16   1          Init_io();        //IO口初始化
  17   1          Init_timer0();    //定时器0初始化
  18   1      #if LOGRANK_UART1 >= 1
  19   1          Init_uart1();     //串口1-USB调试初始化
  20   1      #endif
  21   1          Init_uart4();     //串口4-Wifi ESP8266初始化
  22   1              Init_wkt(1.0,false);//设置掉电唤醒计时器,单位ms.允许0.5ms-min(0),16384ms-max(32767);每次增长0.5ms
  23   1          Init_interrupt(); //中断系统初始化-开关 优先级
  24   1      #if LOGRANK_UART1 >= 2
  25   1              printf("LOG#:Internal Init Finish\r\n");
  26   1      #endif
  27   1              
  28   1          //外部
  29   1              CloudInit();
  30   1          DS18B20STInit(); //初始化DS18B20内存&读取当前DS18B20分辨率
  31   1              LCD1602Init();    ////初始化LCD1602
  32   1      #if LOGRANK_UART1 >= 2
  33   1          printf("LOG#:External Init Finish\r\n");
  34   1      #endif
  35   1      }
  36          void Init_rst(void)
  37          {
  38   1          //看门狗寄存器 // WDT_FLAG - EN_WDT CLR_WDT IDL_WDT WDT_PS[2:0]
  39   1          WDT_CONTR = WDT_CONTR & ~EN_WDT;//开关看门狗
  40   1              //WDT_CONTR |= 0x07;//看门狗分频系数最大
  41   1          //低压复位/RST引脚 配置寄存器 // - ENLVR - P54RST - - LVDS[1:0]
  42   1          RSTCFG = RSTCFG & ~0x40 & ~0x10;
  43   1          RSTCFG &= 0xFC; //LVDS[1:0] 低压检测门槛电压:00 2.2V/01 2.4V/10 2.7V/11 3.0V
  44   1      }
  45          void Init_io(void)
  46          {
  47   1          P3M1 &= 0xFE, P3M0 &= 0xFE; //P3.0为准双向口
  48   1          P3M1 &= 0xFD, P3M0 |= 0x02; //P3.1为推挽输出
  49   1      
  50   1          P0M1 &= 0xFB, P0M0 &= 0xFB; //P0.2为准双向口
  51   1          P0M1 &= 0xF7, P0M0 |= 0x08; //P0.3为推挽输出
  52   1      
  53   1          P3M1 &= 0xBF, P3M0 |= 0x40; //P3.6为推挽输出
C51 COMPILER V9.59.0.0   INIT                                                              04/13/2020 15:48:26 PAGE 2   

  54   1      }
  55          void Init_timer0(void)//1ms
  56          {
  57   1              AUXR |= 0x80;           //定时器时钟1T模式
  58   1              TMOD &= 0xF0;           //设置定时器模式
  59   1              TL0 = 0x9A;             //设置定时初值
  60   1              TH0 = 0xA9;             //设置定时初值
  61   1              TF0 = 0;                //清除TF0标志
  62   1              TR0 = 1;                //定时器0开始计时
  63   1      }
  64          #if LOGRANK_UART1 >= 1
  65          void Init_uart1(void)
  66          {
  67   1          ulong BTL = UART_16(115200, 1);
  68   1          SCON = 0x40;                 // SM0/FE [SM1] SM2 REN TB8 RB8 TI RI
  69   1          PCON &= 0x3F;                // [~SMOD ~SMOD0] LVDF POF GF1 GF0 PD IDL
  70   1          AUXR = AUXR | T2x12 | S1ST2; // T0x12 T1x12 UART_M0x6 T2R T2_C/T [T2x12] EXTRAM [S1ST2]
  71   1          T2L = BTL & 0xFF;
  72   1          T2H = BTL >> 8;
  73   1          uart1_busy = false;
  74   1          AUXR |= T2R; //开启定时器2
  75   1      }
  76          #endif
  77          void Init_uart4(void)
  78          {
  79   1          //使用定时器4 自动重载
  80   1      //    ulong BTL = UART_16(115200, 1);
  81   1      //    S4CON = 0x50;   // [~S4SM0] [S4ST4] S4SM2 [S4REN] S4TB8 S4RB8 S4TI S4RI
  82   1      //    T4T3M |= T4x12; // T4R T4_C/T [T4x12] T4CLKO T3R T3_C/T T3x12 T3CLKO
  83   1      //    T4L = BTL & 0xFF;
  84   1      //    T4H = BTL >> 8;
  85   1      //    T4T3M |= T4R; //开启定时器4
  86   1          //共用定时器2
  87   1          S4CON = 0x10;// S4SM0 S4ST4 S4SM2 S4REN S4TB8 S4RB8 S4TI S4RI
  88   1          uart4_busy=false;
  89   1          uart4_idx1 = uart4_idx2 = 0;
  90   1      }
  91          void Init_wkt(float ms,bool en)//设置掉电唤醒计时器,单位ms.允许0.5ms-min(0),16384ms-max(32767);每次增长0.5
             -ms
  92          {
  93   1              pdata ushort T;
  94   1              if(en==false)
  95   1                      return;
  96   1              T = ((ms*2.0)-1);
  97   1              T &= 0x7FFF;
  98   1              WKTCL = T&0x00FF;
  99   1              WKTCH = (T>>8)&0x007F;
 100   1              WKTCH |= 0x80;//开启掉电唤醒计时器
 101   1      }
 102          void Init_interrupt(void)
 103          {
 104   1          ET0 = 1;                 //开启定时器0中断
 105   1          ES = 1, IE2 &= ~ET2;     //开启串口1中断,关闭定时器2中断
 106   1          IE2 |= ES4, IE2 &= ~ET4; //开启串口4中断,关闭定时器4中断
 107   1      
 108   1          PT0 = 1, IPH |= PT0H; //定时器0优先级3,系统时间尽可能精确,最高优先级
 109   1          PS = 1, IPH &= ~PSH;  //串口1优先级1,不能在串口4ISR中阻塞
 110   1      
 111   1          EA = 1; //开启总中断开关
 112   1      }
 113          
 114          //------------------------------------------------------------------------------------------------//
C51 COMPILER V9.59.0.0   INIT                                                              04/13/2020 15:48:26 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    274    ----
   CONSTANT SIZE    =     56    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       2
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
