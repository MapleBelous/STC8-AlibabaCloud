C51 COMPILER V9.59.0.0   LED                                                               05/08/2020 12:19:53 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\LED.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\SubDev\LED\LED.c OBJECTADVANCED OPTIMIZE(9,SPEED) BROWSE MODP2 INCD
                    -IR(.\Code\Basic\def;.\Code\Basic\delay;.\Code\Basic\init;.\Code\Basic\uart;.\Code\Basic\EEPROM;.\Code\AlibabaCloud;.\Cod
                    -e\SubDev\DS18B20;.\Code\SubDev\GY_25;.\Code\SubDev\LCD1602;.\Code\SubDev\LED) DEBUG PRINT(.\Listings\LED.lst) OBJECT(.\O
                    -bjects\LED.obj)

line level    source

   1          #include "LED.h"
   2          //------------------------------------------------------------------------------------------------//
   3          void LEDInit(void)//³õÊ¼»¯LED
   4          {
   5   1              if(EEPROMRead_MOVEC(EEPROM_IsStorageLED)==0xFF)
   6   1                      LED1 = LEDClose,LED2 = LEDClose,LED3 = LEDClose;
   7   1              else
   8   1              {
   9   2                      LED1 = EEPROMRead_MOVEC(EEPROM_LED1);
  10   2                      LED2 = EEPROMRead_MOVEC(EEPROM_LED2);
  11   2                      LED3 = EEPROMRead_MOVEC(EEPROM_LED3);
  12   2              }
  13   1              CloudAct.NeedReport = true;
  14   1              CloudAct.NeedReportT.LED1 = CloudAct.NeedReportT.LED2 = CloudAct.NeedReportT.LED3 = true;
  15   1              CloudAct.NeedReportT.IsStorageLED = true;
  16   1      #if LOGRANK_UART1 >= 2
                  printf("LOG#:LEDInit ok\r\n");
              #endif
  19   1      }
  20          uchar LEDRead(uchar Idx)//¶ÁÈ¡LED×´Ì¬
  21          {
  22   1              bool re;
  23   1              switch(Idx)
  24   1              {
  25   2                      case 1:
  26   2                              re = LED1 == LEDOpen;break;
  27   2                      case 2:
  28   2                              re = LED2 == LEDOpen;break;
  29   2                      case 3:
  30   2                              re = LED3 == LEDOpen;break;
  31   2                      case 4:
  32   2                              re = (EEPROMRead_MOVEC(EEPROM_IsStorageLED)==0x55);break;
  33   2              }
  34   1              return re;
  35   1      }
  36          bool LEDWrite(uchar Idx,uchar x)//Ð´ÈëLED×´Ì¬
  37          {
  38   1              switch(Idx)
  39   1              {
  40   2              case 1:
  41   2                      if(LED1 != x)
  42   2                      {
  43   3                              LED1 = x,CloudAct.NeedReport = true,CloudAct.NeedReportT.LED1 = true;
  44   3                              if(EEPROMRead_MOVEC(EEPROM_IsStorageLED)==0x55)
  45   3                              {
  46   4                                      EEPROMErase(EEPROM_IsStorageLED);
  47   4                                      EEPROMWrite(EEPROM_IsStorageLED,0x55);
  48   4                                      EEPROMWrite(EEPROM_LED2,LED2);
  49   4                                      EEPROMWrite(EEPROM_LED3,LED3);
  50   4                                      EEPROMWrite(EEPROM_LED1,x);
  51   4                              }
  52   3                      }
C51 COMPILER V9.59.0.0   LED                                                               05/08/2020 12:19:53 PAGE 2   

  53   2                      return EXIT_SUCCESS;
  54   2              case 2:
  55   2                      if(LED2 != x)
  56   2                      {
  57   3                              LED2 = x,CloudAct.NeedReport = true,CloudAct.NeedReportT.LED2 = true;
  58   3                              if(EEPROMRead_MOVEC(EEPROM_IsStorageLED)==0x55)
  59   3                              {
  60   4                                      EEPROMErase(EEPROM_IsStorageLED);
  61   4                                      EEPROMWrite(EEPROM_IsStorageLED,0x55);
  62   4                                      EEPROMWrite(EEPROM_LED1,LED1);
  63   4                                      EEPROMWrite(EEPROM_LED3,LED3);
  64   4                                      EEPROMWrite(EEPROM_LED2,x);
  65   4                              }
  66   3                      }
  67   2                      return EXIT_SUCCESS;
  68   2              case 3:
  69   2                      if(LED3 != x)
  70   2                      {
  71   3                              LED3 = x,CloudAct.NeedReport = true,CloudAct.NeedReportT.LED3 = true;
  72   3                              if(EEPROMRead_MOVEC(EEPROM_IsStorageLED)==0x55)
  73   3                              {
  74   4                                      EEPROMErase(EEPROM_IsStorageLED);
  75   4                                      EEPROMWrite(EEPROM_IsStorageLED,0x55);
  76   4                                      EEPROMWrite(EEPROM_LED1,LED1);
  77   4                                      EEPROMWrite(EEPROM_LED2,LED2);
  78   4                                      EEPROMWrite(EEPROM_LED3,x);
  79   4                              }
  80   3                      }
  81   2                      return EXIT_SUCCESS;
  82   2              case 4:
  83   2                      {
  84   3                              data uchar tmp = EEPROMRead_MOVEC(EEPROM_IsStorageLED);
  85   3                              if((tmp==0xFF && x == true)||(tmp==0x55&&x==false))
  86   3                              {
  87   4                                      if(x==true)
  88   4                                      {
  89   5                                              EEPROMWrite(EEPROM_IsStorageLED,0x55);
  90   5                                              EEPROMWrite(EEPROM_LED1,LED1);
  91   5                                              EEPROMWrite(EEPROM_LED2,LED2);
  92   5                                              EEPROMWrite(EEPROM_LED3,LED3);
  93   5                                      }
  94   4                                      else
  95   4                                              EEPROMErase(EEPROM_IsStorageLED);
  96   4                                      CloudAct.NeedReport = true,CloudAct.NeedReportT.IsStorageLED = true;
  97   4                              }
  98   3                              return EXIT_SUCCESS;
  99   3                      }
 100   2              }
 101   1              return EXIT_FAILURE;
 102   1      }
 103          //------------------------------------------------------------------------------------------------//


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    603    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   LED                                                               05/08/2020 12:19:53 PAGE 3   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
