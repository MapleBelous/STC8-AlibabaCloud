C51 COMPILER V9.59.0.0   ISR                                                               05/08/2020 12:19:52 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ISR
OBJECT MODULE PLACED IN .\Objects\ISR.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\Basic\ISR.c OBJECTADVANCED OPTIMIZE(9,SPEED) BROWSE MODP2 INCDIR(.\
                    -Code\Basic\def;.\Code\Basic\delay;.\Code\Basic\init;.\Code\Basic\uart;.\Code\Basic\EEPROM;.\Code\AlibabaCloud;.\Code\Sub
                    -Dev\DS18B20;.\Code\SubDev\GY_25;.\Code\SubDev\LCD1602;.\Code\SubDev\LED) DEBUG PRINT(.\Listings\ISR.lst) OBJECT(.\Object
                    -s\ISR.obj)

line level    source

   1          #include "CloudHandle.h"
   2          #include "MCUdef.h"
   3          #include "delay.h"
   4          #include "uart.h"
   5          //------------------------------------------------------------------------------------------------//
   6          #ifdef _ISR0_
              void INT0_ISR(void) interrupt 0
              {
              }
              #endif
  11          #ifdef _ISR1_
  12          void TM0_ISR(void) interrupt 1
  13          {
  14   1           ++CloudAct.SysTime;//更新系统时间 1ms
  15   1      }
  16          #endif
  17          #ifdef _ISR2_
              void INT1_ISR(void) interrupt 2
              {
              }
              #endif
  22          #ifdef _ISR3_
              void TM1_ISR(void) interrupt 3
              {
              }
              #endif
  27          #ifdef _ISR4_
  28          void UART1_ISR(void) interrupt 4
  29          {
  30   1          if (TI)
  31   1              TI = 0, uart1Busy = false;
  32   1      }
  33          #endif
  34          #ifdef _ISR5_
              void ADC_ISR(void) interrupt 5
              {
              }
              #endif
  39          #ifdef _ISR6_
              void LVD_ISR(void) interrupt 6
              {
              }
              #endif
  44          #ifdef _ISR7_
              void PCA_ISR(void) interrupt 7
              {
              }
              #endif
  49          #ifdef _ISR8_
  50          void UART2_ISR(void) interrupt 8
  51          {
  52   1              if (S2CON & S2RI)
C51 COMPILER V9.59.0.0   ISR                                                               05/08/2020 12:19:52 PAGE 2   

  53   1          {
  54   2                      bool isFull = false;
  55   2              S2CON &= ~S2RI;
  56   2                      if(uart2Idx2 + 1 == uart2_buffer_size)
  57   2                      {
  58   3                              if(uart2Idx1 == 0)
  59   3                                      isFull = true;
  60   3                      }
  61   2                      else if(uart2Idx1 == uart2Idx2 + 1)
  62   2                              isFull = true;
  63   2                      else
  64   2                              LED_GREEN = 1;
  65   2                      if(isFull == true)//串口缓冲区已满,放弃当前数据
  66   2              {                                                       //不能打印日志,可能导致堆栈错误
  67   3                  LED_GREEN = 0;                                      //亮绿灯表示串口2缓冲区已满
  68   3                  return;
  69   3              }
  70   2              uart2Buffer[uart2Idx2] = S2BUF;
  71   2              if (uart2Idx2 + 1 == uart2_buffer_size)
  72   2                  uart2Idx2 = 0;
  73   2              else
  74   2                  ++uart2Idx2;
  75   2          }
  76   1          else
  77   1              S2CON &= ~S4TI, uart2Busy = false;
  78   1      }
  79          #endif
  80          #ifdef _ISR9_
              void SPI_ISR(void) interrupt 9
              {
              }
              #endif
  85          #ifdef _ISR10_
              void INT2_ISR(void) interrupt 10
              {
              }
              #endif
  90          #ifdef _ISR11_
              void INT3_ISR(void) interrupt 11
              {
              }
              #endif
  95          #ifdef _ISR12_
              void TM2_ISR(void) interrupt 12
              {
              }
              #endif
 100          #ifdef _ISR13_
              void INT4_ISR(void) interrupt 16
              {
              }
              #endif
 105          #ifdef _ISR14_
              void UART3_ISR(void) interrupt 17
              {
              }
              #endif
 110          #ifdef _ISR15_
 111          void UART4_ISR(void) interrupt 18
 112          {
 113   1              if(S4CON & S4RI)
 114   1              {
C51 COMPILER V9.59.0.0   ISR                                                               05/08/2020 12:19:52 PAGE 3   

 115   2                      bool isFull = false;
 116   2              S4CON &= ~S4RI;
 117   2                      if(uart4Idx2 + 1 == uart4_buffer_size)
 118   2                      {
 119   3                              if(uart4Idx1 == 0)
 120   3                                      isFull = true;
 121   3                      }
 122   2                      else if(uart4Idx1 == uart4Idx2 + 1)
 123   2                              isFull = true;
 124   2                      else
 125   2                              LED_BLUE = 1;
 126   2                      if(isFull == true)//串口缓冲区已满,放弃当前数据
 127   2              {                                                       //不能打印日志,可能导致堆栈错误
 128   3                  LED_BLUE = 0;                                      //亮蓝灯表示串口4缓冲区已满
 129   3                  return;
 130   3              }
 131   2              uart4Buffer[uart4Idx2] = S4BUF;
 132   2              if (uart4Idx2 + 1 == uart4_buffer_size)
 133   2                  uart4Idx2 = 0;
 134   2              else
 135   2                  ++uart4Idx2;
 136   2              }
 137   1              else
 138   1                      S4CON &= ~S4TI, uart4Busy = false;
 139   1      }
 140          #endif
 141          #ifdef _ISR16_
              void TM3_ISR(void) interrupt 19
              {
              }
              #endif
 146          #ifdef _ISR17_
              void TM4_ISR(void) interrupt 20
              {
              }
              #endif
 151          #ifdef _ISR18_
              void CMP_ISR(void) interrupt 21
              {
              }
              #endif
 156          #ifdef _ISR19_
              void PWM_ISR(void) interrupt 22
              {
              }
              #endif
 161          #ifdef _ISR20_
              void PWMFD_ISR(void) interrupt 23
              {
              }
              #endif
 166          #ifdef _ISR21_
              void I2C_ISR(void) interrupt 24
              {
              }
              //------------------------------------------------------------------------------------------------//
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.59.0.0   ISR                                                               05/08/2020 12:19:52 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
